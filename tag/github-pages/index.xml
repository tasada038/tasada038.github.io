<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>GitHub Pages | t.asada</title>
    <link>https://tasada038.github.io/tag/github-pages/</link>
      <atom:link href="https://tasada038.github.io/tag/github-pages/index.xml" rel="self" type="application/rss+xml" />
    <description>GitHub Pages</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><copyright>Copyright © Takumi Asada All rights reserved.</copyright><lastBuildDate>Fri, 31 May 2024 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://tasada038.github.io/media/icon_hu88bb3a8e39e18edcd54fae158a90ede6_217848_512x512_fill_lanczos_center_3.png</url>
      <title>GitHub Pages</title>
      <link>https://tasada038.github.io/tag/github-pages/</link>
    </image>
    
    <item>
      <title>How to use starter-hugo-academic and Github Pages?</title>
      <link>https://tasada038.github.io/blog/2024/05/31/hugo_academic/</link>
      <pubDate>Fri, 31 May 2024 00:00:00 +0000</pubDate>
      <guid>https://tasada038.github.io/blog/2024/05/31/hugo_academic/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#how-to-create-the-original-website&#34;&gt;How to create the original website?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#edit-website&#34;&gt;Edit Website&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#upload-github&#34;&gt;upload github&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#references&#34;&gt;References&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;h1 id=&#34;how-to-create-the-original-website&#34;&gt;How to create the original website?&lt;/h1&gt;
&lt;p&gt;ベースとして、&lt;a href=&#34;https://mickaellalande.github.io/post/tutorial/how-to-create-an-academic-github-page-with-hugo/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;How to Create an Academic/Wowchemy GitHub Page With Hugo?&lt;/a&gt;の手順で作成していきます。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;starter-hugo-academicをFork&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/wowchemy/starter-hugo-academic&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;starter-hugo-academic&lt;/a&gt;をForkします。&lt;/p&gt;
&lt;p&gt;Forkしたリポジトリは&lt;code&gt;website&lt;/code&gt;として名前を変更しており、これをローカルへクローンします。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;user_name.github.ioのリポジトリを作成&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;GitHub Pagesのリポジトリを作成し、&lt;code&gt;website&lt;/code&gt;ディレクトリ下でsubmoduleとして追加します。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-sh:&#34;&gt;git submodule add -f -b master https://github.com/tasada038/tasada038.github.io.git public
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;websiteの中身を修正&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2023/11/04、Ubuntu 22.04にて動作確認したところ、hugoコマンドにてERRORが生じたため、以下ReferencesのGithubを参考に&lt;code&gt;theme.toml&lt;/code&gt;、&lt;code&gt;netlify.toml&lt;/code&gt;、&lt;code&gt;go.*&lt;/code&gt;を修正し、必要不必要なフォルダを精査して作成します。&lt;/p&gt;
&lt;p&gt;使用するライブラリ指定などがしっかりとできていれば&lt;code&gt;hugo&lt;/code&gt;コマンドが通るので&lt;code&gt;website&lt;/code&gt;ディレクトリ下で&lt;code&gt;hugo&lt;/code&gt;コマンドを実行しましょう。&lt;/p&gt;
&lt;p&gt;すると、public下に必要なパッケージが自動生成されるはずです。そしたら&lt;code&gt;hugo server&lt;/code&gt;コマンドでwebsiteの出来を確認します。&lt;/p&gt;
&lt;h1 id=&#34;edit-website&#34;&gt;Edit Website&lt;/h1&gt;
&lt;p&gt;以下のディレクトリへ移動し、サーバーを起動します。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-sh:&#34;&gt;cd ~/website
hugo server
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;website/content&lt;/strong&gt;内のMarkdownを編集・追加することで記事の編集が可能になります。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Achivementsの編集&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Achivementsの編集は /content/home下の.mdファイルにて追記する。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Publicationsの編集&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;/content/publication下へフォルダを追加し、その中の.mdファイルにて追記する。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ヘッダーの編集&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;/config/_default/menus.yaml を編集する。&lt;/p&gt;
&lt;p&gt;編集完了後は以下を実行し、./publicへビルド生成物を出力します。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-sh:&#34;&gt;hugo
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;upload-github&#34;&gt;upload github&lt;/h1&gt;
&lt;p&gt;GitHubへpushします。&lt;/p&gt;
&lt;p&gt;publicがsubmoduleなので、先にサブモジュールをコミット/プッシュしてからwebsiteをpushします。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cd public/
git add *
git commit -m &amp;quot;update submodule&amp;quot;
git push origin master

cd ..
git add *
git commit -m &amp;quot;update website&amp;quot;
git push origin master
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;references&#34;&gt;References&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://qiita.com/junffy/items/3188671d02a771920fd7&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;hugo-academicでポートフォリオを作成する&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://r9y9.github.io/blog/2022/01/18/hugo-academic/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hugo Academic を使ってウェブサイトをアップデートしました&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/r9y9/website&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Github: r9y9/website&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://zenn.dev/nikaera/articles/hugo-github-actions-for-github-pages&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hugo + GitHub Pages + GitHub Actions で独自ドメインのウェブサイトを構築する&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://zenn.dev/okaponta/articles/c302f58507febc&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hugo+Github Pagesでプロフィールページを作ってみた&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://zenn.dev/harachan/articles/a043e9a756cae4&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;hugoを使って爆速でブログを作成する&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
